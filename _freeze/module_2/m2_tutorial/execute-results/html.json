{
  "hash": "eb92fcf954478a7ab5bd70725149508e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Tutorial\"\n---\n\n## About this tutorial\n\nIn this tutorial you will learn to modify an OBT linelist to add variables and analyses.\n\n\n### ðŸŽ¯ Objectives \n\n- Understand the OBT linelist building workflow\n- Know how to add variables to an OBT linelist by using the dictionary\n- Know how to add analyses (tables and graphs) to an OBT linelist\n- Generate a linelist from a dictionary.\n\n### ðŸ§­ Context\n\nMSF has been working in eastern and southern Chad since 2006 where our teams provide medical care and assistance to displaced people and local communities who often struggle with a lack of food.\n\nA measles OBT linelist was deployed, and need to be tweaked to better serve the needs of the field.\n\n\n### Activities\n\nIn this tutorial, you will get access to several files that we are going to use:\n\n- a (simplified) dictionary for a measles OBT linelist\n- an empty linelist generated by that dictionary\n- the most recent designer file\n\nWe will use this files to discover how to generate linelists from a **setup file**, and modify this **setup file** to generate an improved linelist. \n\nExplanations will be given in simple text, or boxes (tips, notes etc.) and instructions will be given in instructions boxes:\n\n\n::: {.callout-warning}\nI contain important information!\n:::\n\n::: {.callout-tip}\nI am a handy bit of information that may be omitted if you are in a hurry, but totally deserve some attention at some point.\n:::\n\n::: {.instructions}\nNow do **do something**!\n:::\n\n\n## Get ready\n\n### Download and unzip the tutorial materials\n\nThe files that you are going to use are stored on Github, bundled in a `zip` archive. \n\n::: {.instructions}\n1. Click on the button to download the archive. Save it on your computer (in your *Downloads* folder for example). \n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<a href=\"https://github.com/epicentre-msf/obt-training/raw/master/tutorials_materials/module_2.zip\">\n<button class=\"btn btn-default\"><i class=\"fa fa-save\"></i> Download materials</button>\n</a>\n```\n\n:::\n:::\n\n\n2. Unzip the whole archive and save the files locally. It is better to save the unzipped folder in a location that is not actively synchronised with OneDrive at the moment.\n:::\n\n\n### Description of the folder content\n\n- a **setup file** for a measles OBT linelist \n- an empty linelist generated by that dictionary to better help you see how the specs translate into the final product)\n- the most recent **designer file**\n\n\n## Part 0: unlock files and functionalities {#sec-unblock-file}\n\nOBT linelists use VBA macros to add functionalities. As a consequence, linelists that come from the internet often need to be unblocked, and macro enabled in them. \n\n::: {.instructions}\nUnblock your files, or make sure they are already unlocked. If you have never done that before, [follow the steps from this page](../how_to/unblock_files.qmd)\n:::\n\n\n## Part 1: First contact with the **setup** file\n\nIn this part, we are going to inspect the **setup** file and generate the linelist.\n\n::: {.instructions}\nOpen the **setup file** that you downloaded and inspect it. You should see the following sheets/tables:\n\n- Dictionary\n- Choices\n- Exports\n- Analyses\n- Translation\n- _checkRep\n\nOpen the associated **linelist file**, as it will help you make the link between the specs and the final product.\n:::\n\n\nThe \"Dictionary\" sheet contains a big table, that we are going to explore little by little. One line of this table contains one *variable*. The columns contain many properties to describe this variable:\n\n- its name (aka the unique identifier of the variable, that the user will not see by default)\n- its label (a longer description that the user will see)\n- in which sheet it belongs\n- in which section it belong\n- should it be mandatory, or can it be hidden?\n- what is the type and format of the variable\n- etc.\n\nTo start getting a sense of how this work, let's look at the rows 6 to 12:\n\n![The start of the dictionary sheet](../module_2/images/img-003-dictionary.png){fig-align=\"center\"}\nWe can see seven variables, which names all start with \"info_\".\n\n::: {.instructions}\nIn parallel, go to the \"Info\" sheet of the linelist. Try to understand how the columns of the **setup** that have content translate in the **linelist**. Some of them should be easy, some of them we will explain:\n\n- labels, sub-labels\n- have you found where the \"Note\" goes?\n- Sheet name is obvious. Sheet type... not so much. We will explain.\n- Do you understand why you don't see the \"Outbreak code\" column in the linelist? Do you know of the steps to make it appear?^[Hint: There is a button to show and hide variables in the linelist OBT menu.]\n- Enter some data in the \"Info\" sheet of the linelist. Does it help you figure out what the \"Control\" and the \"Control Details\" column do in general (even if the dropdown might be obscure so far)?\n\n:::\n\n![The corresponding Info sheet in the linelist](../module_2/images/img-004-info_sheet.png){fig-align=\"center\"}\n\n\nA couple of things that you need to know:\n\n**Variable name**: the variable name is not obvious in the linelist. In the \"Info\" sheet, you can see it at the left of the formula bar if you select a cell that contain data (e.g. E5).\n\n**Colours**: some variable names and labels are in colour. This is a choice of the the person who developed this setup, at it helps them differentiate specific variables. You can ignore them, unless it makes sense to you.\n\n**Dev comments**: this free text column is for the sole benefit of the setup file developer, to add technical or practical information. It is not used by the designer and does not affect the generated file. You can ignore it, unless it makes sense to you.\n\n**Sheet type** controls whether the table created is made of variables that contains one value (perfect for metadata, like the \"Info\" sheet), or several values (a table made of columns, like the \"Patient linelist\" sheet). More information in the [documentation](https://epicentre-msf.github.io/outbreak-tools/reference/dictionary_sheet.html#sec-sheet-types)\n\n![Sheet type](../module_2/images/img-005-sheet-type.png){fig-align=\"center\"}\n\n**Status** controls the visibility of variables. *Mandatory* variables are always shown, *Hidden* are always hidden (good for obscure calculated columns) and *Optional, visible\" and \"Optional, hidden\" can be changed, but have different default values. In our exemple, the Outbreak code is optional but hidden by default, so you don't see it in the linelist by default. On the other hand \"MSF involvment in the facility\" is shown by default, but you could hide it using the [Show/Hide](https://epicentre-msf.github.io/outbreak-tools/reference/ribbons_linelist.html#show-hide-variables).\n\n**Control**: the \"Control\" and \"Control Details\" define the *content* of the variable. \n\nHopefully, you have figured that if the column is empty for a variable, the variable is free (e.g. the \"Facility name\" variable). You probably also figured out that *choice_manual* create cells with dropdown menus, like \"Organisation\" or \"Country\". We use these variables as often as possible in our linelist, to improve data quality. For these variables, we need to provide a list of options, categories, to fill the dropdown menu. The \"Control Details\" contain names, such as \"list_organisation\". These lists are defined \"Choices\" sheet.\n\n::: {.instructions}\nGo to the \"Choices\" sheet. Can you find the lists used in the \"Info\" sheet?\n:::\n\nTo summarise, the \"Choices\" sheet in the setup contains all the values for all the dropdown menus. The name of the list (that by convention we often name \"list_xxx\") makes the link between the values of the list and the variable in the \"Dictionary\" sheet.\n\nFinally, you also figured out that the control *formula* defines a calculated variable (cell or column), and that in this case the \"Control Details\" column contains the Excel formula (in English). \n\n::: {.instructions}\nLet's look atthe rest of the variables. All of them are for the data entry sheet, the sheet \"Patient Linelist\" in the **linelist file**. For such a big table the *section* and *supsection* columns start to be very useful.\n\n- Going back and forth between the **setup** and the **linelist**, do you understand what the control *choice_custom_ does?\n- Which columns are defined as containing personnal informations?\n- Do all of the **Variable type** options make sense to you?\n- What about the **Variable format**?\n:::\n\nIf you scroll down rapidly, you will see that there are a lot of variables, in the order that you see them in the linelist. There is a mix of data entry columns and calculated columns. Most of the calculated columns are *hidden*, or *hidden by default*, and derive useful quantities, such as age group, or week associated with data columns. Some of the formulas are simple, some of them more complicated and of them are not native to Excel (CASE_WHEN()^[R users should be happy about this one!] or CHOICE_FORMULA() for example) and were coded explicitly to simplify Excel syntax.\n\n\n::: {.instructions}\nHave a *quick* look at the other sheets of the setup.\n\n- How many exports do you think the linelist will do?\n- Do you think there will be a sheet with univariate and bivariate analyses encoded? What about Spatio-temporal analyses?\n- Which languages are available for the cholera linelist?\n:::\n\n\n## Part 2: Generate a linelist from an existing setup\n\nOk, now that you understand that the **setup** file contains all the specifications of the linelist, including analyses, exports and even translations, let's turn this glorified dictionary into a linelist.\n\n::: {.instructions}\n1) Save and close the setup file\n2) Open the designer file\n:::\n\n### Continuous\n\n### Categorical\n\n\n## Part 3: Add columns to a linelist\n## Add analyses\n\n## Part 4: Add an MoH export",
    "supporting": [
      "m2_tutorial_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/font-awesome-6.5.2/js/script.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}